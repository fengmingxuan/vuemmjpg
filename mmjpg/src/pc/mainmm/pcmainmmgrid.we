<template>
    <div>
        <list class="list" >
            <refresh class="refresh-view refresh-view-{{skinType}}" display="{{refresh_display}}" onrefresh="onrefresh"
                     refreshing="{{refreshing}}">
                <loading-indicator class="indicator"></loading-indicator>
                <text class="refresh-arrow refresh-arrow-{{skinType}}">
                    下拉刷新
                </text>
            </refresh>
            <cell repeat="{{tag in tags}}">
                <pcmainmmgriditem tag="{{tag}}"></pcmainmmgriditem>
            </cell>
        </list>
    </div>
</template>
<script>
    require('./pcmainmmgriditem.we')
    require('weex-components');
    var mmjpg = require('../../mmjpg');
    var weexJsoupModule = require('@weex-module/weexJsoupModule');
    var storage = require('@weex-module/storage');
    module.exports = {
        data: {
            tags: [],
            refreshing: 'false',
            refresh_display: 'show',
            skinType: 0,
            showLoading: 'hide',
            href:mmjpg.getm_mmjpg(),
        },
        methods: {
            autoRefresh:function () {
                this.refresh();

            },
            onrefresh: function (e) {
                var self = this;
                self.refresh_display = 'show';
                self.refresh();
            },
            refresh: function () {
                var self = this;
                weexJsoupModule.pcmainmmlist(self.href,function(e){
                    self.refresh_display = 'hide';
                    self.showLoading = 'hide';
                    self.refreshing = "false";
                    var json;
                    json = eval('(' + e + ')');
                    console.log('json==='+json);
                    self.tags.splice(0, self.tags.length);
                    if (json.list) {
                        if (json.list && json.list.length > 0) {
                            for (var i = 0; i < json.list.length; i+=2) {
                                var tag = json.list[i];
                                var tag2 = json.list[i+1];
                                if(tag2==undefined){
                                    tag2 = tag;
                                }
                                var tagg={
                                    href:tag.href,
                                    src:tag.src,
                                    alt:tag.alt,
                                    href2:tag2.href,
                                    src2:tag2.src,
                                    alt2:tag2.alt,
                                };
                                self.tags.push(tagg);
                            }
                        }
                    }


                });
            }
        },
        created: function () {
            var self = this;
//            storage.getItem('taghref',function(s){
//                console.log('get taghref result:'+JSON.stringify(s));
//                var staghref = s.data;
//                if(staghref!=undefined){
//                    self.taghref = staghref;
//                }
//                console.log('taghref=='+self.taghref);
//                self.refresh();
//            });
//           var shref = this.$getConfig().href;
//            if(shref!=undefined){
//             self.href = shref;
//            }
//             self.refresh();

        },
        ready: function () {

        },

    };
</script>

<style>
    .list {
        width: 750;
    }

    .content_class-0 {
        background-color: #f5f5f5;
    }

    .content_class-1 {
        background-color: #15253d;
    }

    .loading-view {
        width: 750;
        height: 50wx;
        display: -ms-flex;
        display: -webkit-flex;
        display: flex;
        -ms-flex-align: center;
        -webkit-align-items: center;
        -webkit-box-align: center;
        align-items: center;
        justify-content: center;
    }

    .loading-view-1 {
        background-color: #15253d;
    }

    .loading-view-0 {
        background-color: #f5f5f5;
    }

    .refresh-arrow {
        margin-top: 3wx;
        height: 12wx;
        width: 200wx;
        font-size: 12wx;
        text-align: center;
        align-items: center;
    }

    .refresh-arrow-0 {
        color: #BBBBBB;
    }

    .refresh-arrow-1 {
        color: #666666;
    }

    .refresh-view {
        width: 750;
        height: 40wx;
        display: -ms-flex;
        display: -webkit-flex;
        display: flex;
        -ms-flex-align: center;
        -webkit-align-items: center;
        -webkit-box-align: center;
        align-items: center;
        justify-content: center;

    }

    .refresh-view-0 {
        background-color: #f5f5f5;
    }

    .refresh-view-1 {
        background-color: #15253d;
    }

    .indicator {
        height: 25wx;
        width: 25wx;
        color: #889967;
    }
</style>